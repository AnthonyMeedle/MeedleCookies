<?php
/**
* This class has been generated by TheliaStudio
* For more information, see https://github.com/thelia-modules/TheliaStudio
*/

namespace MeedleCookies\Controller\Base;

use MeedleCookies\MeedleCookies;
use Thelia\Controller\Admin\BaseAdminController;
use Thelia\Form\Exception\FormValidationException;
use Thelia\Core\Security\Resource\AdminResources;
use Thelia\Core\Security\AccessManager;
use MeedleCookies\Model\Config\MeedleCookiesConfigValue;

/**
 * Class MeedleCookiesConfigController
 * @package MeedleCookies\Controller\Base
 * @author Meedle
 */
class MeedleCookiesConfigController extends BaseAdminController
{
    public function defaultAction()
    {
        if (null !== $response = $this->checkAuth([AdminResources::MODULE], ["meedlecookies"], AccessManager::VIEW)) {
            return $response;
        }

        return $this->render("module-configuration");
    }

    public function saveAction()
    {
        if (null !== $response = $this->checkAuth([AdminResources::MODULE], ["meedlecookies"], AccessManager::UPDATE)) {
            return $response;
        }

        $baseForm = $this->createForm("meedlecookies.configuration");

        $errorMessage = null;

        try {
            $form = $this->validateForm($baseForm);
            $data = $form->getData();
            MeedleCookies::setConfigValue(MeedleCookiesConfigValue::GOOGLE_TAG_MANAGER_ID, is_bool($data["googletagmanagerid"]) ? (int) ($data["googletagmanagerid"]) : $data["googletagmanagerid"]);
            MeedleCookies::setConfigValue(MeedleCookiesConfigValue::TARTEAUCITRON_MULTIPLETAGUA, is_bool($data["tarteaucitron_multipletagua"]) ? (int) ($data["tarteaucitron_multipletagua"]) : $data["tarteaucitron_multipletagua"]);
        } catch (FormValidationException $ex) {
            // Invalid data entered
            $errorMessage = $this->createStandardFormValidationErrorMessage($ex);
        } catch (\Exception $ex) {
            // Any other error
            $errorMessage = $this->getTranslator()->trans('Sorry, an error occurred: %err', ['%err' => $ex->getMessage()], [], MeedleCookies::MESSAGE_DOMAIN);
        }

        if (null !== $errorMessage) {
            // Mark the form as with error
            $baseForm->setErrorMessage($errorMessage);

            // Send the form and the error to the parser
            $this->getParserContext()
                ->addForm($baseForm)
                ->setGeneralError($errorMessage)
            ;
        } else {
            $this->getParserContext()
                ->set("success", true)
            ;
        }

        return $this->defaultAction();
    }
}
